// ĐIỀU KHIỂN GIAO DIỆN BÁN HÀNG
package code.view;

import code.control.BanhangHandler;
import code.lop.SanPham;
import code.dao.SanPhamDAO;
import code.control.SanphamHandler;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.*;
import java.io.*;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.logging.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import javax.xml.parsers.*;
import org.xml.sax.SAXException;

public class Ban_hang extends javax.swing.JFrame {
//LoaiSPDAO daoLoaiSP = new LoaiSPDAO();

    SanPhamDAO daoSP = new SanPhamDAO();
    DefaultTableModel KhohangModel, DonhangModel;

    List<SanPham> banhangList = new ArrayList<>();
    SanPhamDAO donhang = new SanPhamDAO();
    String ngay;

    public Ban_hang() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("TVQK&NDN SHOE SHOP - Thoải mái trong từng bước chân!");

        // Sắp xếp sản phẩm trong bảng kho hàng
        KhohangModel = (DefaultTableModel) tbl_khohang.getModel();
        TableRowSorter<DefaultTableModel> sorter1 = new TableRowSorter<>(KhohangModel);
        KhohangModel.setRowCount(0);
        tbl_khohang.setRowSorter(sorter1);
        sorter1.setComparator(0, new Comparator<String>() {
            @Override
            public int compare(String s1, String s2) {
                return s1.compareTo(s2);
            }
        });
        sorter1.setSortable(0, true);
        sorter1.toggleSortOrder(0);

        // Sắp xếp sản phẩm trong bảng bán hàng
        DonhangModel = (DefaultTableModel) tbl_donhang.getModel();
        TableRowSorter<DefaultTableModel> sorter2 = new TableRowSorter<>(DonhangModel);
        DonhangModel.setRowCount(0);
        tbl_donhang.setRowSorter(sorter2);
        sorter2.setComparator(0, new Comparator<String>() {
            @Override
            public int compare(String s1, String s2) {
                return s1.compareTo(s2);
            }
        });
        sorter2.setSortable(0, true);
        sorter2.toggleSortOrder(0);

        ImportKhohang();
        ImportBanhang();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btn_quanly = new javax.swing.JButton();
        txt_MaSp = new javax.swing.JTextField();
        btn_ThemHang = new javax.swing.JButton();
        btn_TimKem = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_donhang = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_khohang = new javax.swing.JTable();
        txt_slBan = new javax.swing.JTextField();
        a = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_giaban = new javax.swing.JTextField();
        btn_Quaylai = new javax.swing.JButton();
        btn_Thoat = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        btn_Lammoi = new javax.swing.JButton();
        txt_TenSp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbl_donhang1 = new javax.swing.JLabel();
        lbl_donhang2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Huy_don = new javax.swing.JButton();
        Thanh_toan = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        vnd = new javax.swing.JLabel();
        txt_Gia1 = new javax.swing.JTextField();
        XoaSp = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_Gia2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TongGia = new javax.swing.JTextField();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, 20));

        btn_quanly.setFont(new java.awt.Font("Forte", 1, 36)); // NOI18N
        btn_quanly.setForeground(new java.awt.Color(0, 0, 102));
        btn_quanly.setText("TVQK&NDN SHOE SHOP");
        btn_quanly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quanlyActionPerformed(evt);
            }
        });
        jPanel1.add(btn_quanly, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 570, 50));
        jPanel1.add(txt_MaSp, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 281, -1));

        btn_ThemHang.setBackground(new java.awt.Color(102, 255, 255));
        btn_ThemHang.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btn_ThemHang.setText("Thêm");
        btn_ThemHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThemHangActionPerformed(evt);
            }
        });
        jPanel1.add(btn_ThemHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, 110, 50));

        btn_TimKem.setBackground(new java.awt.Color(102, 255, 255));
        btn_TimKem.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btn_TimKem.setText("Tìm kiếm");
        btn_TimKem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKemActionPerformed(evt);
            }
        });
        jPanel1.add(btn_TimKem, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 600, 110, 50));

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel10.setText("Số lượng bán");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 100, -1));

        tbl_donhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Ngày bán", "Loại sản phẩm", "Số lượng bán", "Giá bán (VNĐ/đôi)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_donhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_donhangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_donhang);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 650, 290));

        tbl_khohang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Ngày nhập", "Loại sản phẩm", "Số lượng ", "Giá nhập (VNĐ/đôi)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_khohang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_khohangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_khohang);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 1060, 119));

        txt_slBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_slBanActionPerformed(evt);
            }
        });
        jPanel1.add(txt_slBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, 280, -1));

        a.setText(".000 VNĐ/ đôi");
        jPanel1.add(a, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 406, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel11.setText("Giá bán");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 60, -1));
        jPanel1.add(txt_giaban, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 280, -1));

        btn_Quaylai.setBackground(new java.awt.Color(0, 0, 102));
        btn_Quaylai.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btn_Quaylai.setForeground(new java.awt.Color(255, 255, 255));
        btn_Quaylai.setText("Quay lại");
        btn_Quaylai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_QuaylaiActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Quaylai, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 750, 108, -1));

        btn_Thoat.setBackground(new java.awt.Color(0, 0, 102));
        btn_Thoat.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btn_Thoat.setForeground(new java.awt.Color(255, 255, 255));
        btn_Thoat.setText("Thoát");
        btn_Thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThoatActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Thoat, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 750, 108, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 1, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 51));
        jLabel12.setText("KHO HÀNG");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, -1, -1));

        btn_Lammoi.setBackground(new java.awt.Color(102, 255, 255));
        btn_Lammoi.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btn_Lammoi.setText("Làm mới");
        btn_Lammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LammoiActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Lammoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 600, 108, 50));

        txt_TenSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TenSpActionPerformed(evt);
            }
        });
        jPanel1.add(txt_TenSp, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 570, 280, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel4.setText("Tên sản phẩm");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, -1, -1));

        lbl_donhang1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        lbl_donhang1.setText("ĐƠN HÀNG");
        lbl_donhang1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_donhang1MouseClicked(evt);
            }
        });
        jPanel1.add(lbl_donhang1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 260, -1, 30));

        lbl_donhang2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        lbl_donhang2.setText("TÌM KIẾM");
        lbl_donhang2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_donhang2MouseClicked(evt);
            }
        });
        jPanel1.add(lbl_donhang2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 500, -1, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel5.setText("Giá tiền");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, -1, -1));

        jLabel1.setText("(nghìn đồng)");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, 20));

        Huy_don.setBackground(new java.awt.Color(0, 255, 255));
        Huy_don.setText("Hủy đơn hàng");
        Huy_don.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Huy_donActionPerformed(evt);
            }
        });
        jPanel1.add(Huy_don, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 630, 180, 100));

        Thanh_toan.setText("Thanh toán");
        Thanh_toan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Thanh_toanActionPerformed(evt);
            }
        });
        jPanel1.add(Thanh_toan, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 630, 190, 100));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Tổng giá trị đơn hàng:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 600, 170, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("VNĐ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 603, 70, 20));

        vnd.setText(".000 VNĐ");
        jPanel1.add(vnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 544, 60, 20));
        jPanel1.add(txt_Gia1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 540, 130, -1));

        XoaSp.setText("Xóa");
        XoaSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaSpActionPerformed(evt);
            }
        });
        jPanel1.add(XoaSp, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, 110, 50));

        jLabel8.setText(".000 VNĐ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 544, -1, 20));

        txt_Gia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_Gia2ActionPerformed(evt);
            }
        });
        jPanel1.add(txt_Gia2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 540, 130, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("-");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 540, 20, 20));
        jPanel1.add(TongGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 600, 250, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 790));

        pack();
    }// </editor-fold>//GEN-END:initComponents
        public void resetForm() {
        txt_MaSp.setText("");
        txt_slBan.setText("");
        txt_giaban.setText("");
        txt_Gia1.setText("");
        txt_Gia2.setText("");
        txt_TenSp.setText("");
    }

    public void ImportKhohang() {
        FileInputStream fis = null;
        try {
            // TODO add your handling code here:
            fis = new FileInputStream("sanpham.xml");
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser parser = factory.newSAXParser();

            SanphamHandler handler = new SanphamHandler();

            parser.parse(fis, handler);

            daoSP.sanphamlist = handler.getSanphamlist();

            KhohangModel.setRowCount(0);

            for (SanPham sp : daoSP.sanphamlist) {
                DecimalFormat decimalFormat = new DecimalFormat("#,###");
                String format = decimalFormat.format(sp.getGia());
                String format1 = decimalFormat.format(sp.getSoluong());
                KhohangModel.addRow(new Object[]{
                    sp.getMaSp(), sp.getTenSp(),
                    sp.getNgayNhap(), sp.getLoaisp(),
                    format1, format
                });
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    public void ExportKhohang() {
        StringBuilder builder = new StringBuilder();
        for (SanPham sp : daoSP.sanphamlist) {
            builder.append(sp.getXMLString());
        }

        String body = builder.toString();
        String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n"
                + "<sanphamlist>\n"
                + body
                + "\n</sanphamlist>";

        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream("sanpham.xml");
            byte[] data = xml.getBytes();

            fos.write(data);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (fos != null) {
                try {
                    fos.close();
                } catch (IOException ex) {
                    Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public void ExportBanhang() {
        StringBuilder builder = new StringBuilder();
        for (SanPham sp : banhangList) {
            builder.append(sp.getXMLStringBanhang());
        }

        String body = builder.toString();
        String xml = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n"
                + "<banhanglist>\n"
                + body
                + "\n</banhanglist>";

        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream("banhang.xml");
            byte[] data = xml.getBytes();

            fos.write(data);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (fos != null) {
                try {
                    fos.close();
                } catch (IOException ex) {
                    Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    public void ImportBanhang() {
        FileInputStream fis = null;
        try {
            // TODO add your handling code here:
            fis = new FileInputStream("banhang.xml");
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser parser = factory.newSAXParser();
            BanhangHandler handler = new BanhangHandler();
            parser.parse(fis, handler);
            banhangList = handler.getBanhanglist();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    

    public boolean check() {
        for (SanPham sp : daoSP.sanphamlist) {
            if (sp.getMaSp().equalsIgnoreCase(txt_MaSp.getText().trim()) && !sp.getTenSp().equalsIgnoreCase(txt_Gia1.getText())) {
                return false;
            }
        }
        return true;
    }

    public SanPham getModel() throws ParseException {
        SanPham sp = new SanPham();
        sp.setMaSp(txt_MaSp.getText().trim());
        return sp;
    }

    public void fillData() {
        KhohangModel.setRowCount(0);
        for (SanPham sp : daoSP.getAllSanPham()) {
            DecimalFormat decimalFormat = new DecimalFormat("#,###");
            String format = decimalFormat.format(sp.getGia());
            String format1 = decimalFormat.format(sp.getSoluong());
            Object[] rowData = new Object[6];
            rowData[0] = sp.getMaSp();
            rowData[1] = sp.getTenSp();
            rowData[2] = sp.getNgayNhap();
            rowData[3] = sp.getLoaisp();
            rowData[4] = format1;
            rowData[5] = format;
            KhohangModel.addRow(rowData);
        }
    }

    public void quay_lai() {
        Nhap_hang nh = new Nhap_hang();
        Lua_chon lc = new Lua_chon();

        lc.setVisible(true);
        nh.setVisible(false);
        dispose();
    }

    private void btn_QuaylaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_QuaylaiActionPerformed
        // TODO add your handling code here:
        quay_lai();
    }//GEN-LAST:event_btn_QuaylaiActionPerformed

    private void txt_slBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_slBanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_slBanActionPerformed

    private void tbl_khohangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_khohangMouseClicked
        // TODO add your handling code here:
        int row = tbl_khohang.getSelectedRow();
        if (row >= 0) {
            int rowID = tbl_khohang.convertRowIndexToModel(row);
            String maSp = (String) tbl_khohang.getModel().getValueAt(rowID, 0);
            txt_MaSp.setText(maSp);
        }
    }//GEN-LAST:event_tbl_khohangMouseClicked

    private void tbl_donhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_donhangMouseClicked
        // TODO add your handling code here:
        ngay = "";
        int row = tbl_donhang.getSelectedRow();
        if (row >= 0) {
            int rowID = tbl_donhang.convertRowIndexToModel(row);
            String maSp = (String) tbl_donhang.getModel().getValueAt(rowID, 0);
            txt_MaSp.setText(maSp);
            String sl = (String) tbl_donhang.getModel().getValueAt(rowID, 4);
            int soluongban = Integer.parseInt(sl.replaceAll(",", "")); 
            txt_slBan.setText(String.valueOf(soluongban));
            String gia = (String) tbl_donhang.getModel().getValueAt(rowID, 5);
            int giaban = Integer.parseInt(gia.replaceAll(",", ""))/1000; 
            txt_giaban.setText(String.valueOf(giaban));
            ngay = (String) tbl_donhang.getModel().getValueAt(rowID, 2);
        }
    }//GEN-LAST:event_tbl_donhangMouseClicked

    private void btn_TimKemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKemActionPerformed

        // TODO add your handling code here:
        if (txt_TenSp.getText().isEmpty() && txt_Gia1.getText().isEmpty() && txt_Gia2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập thông tin sản phẩm cần tìm", "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }
        String name = txt_TenSp.getText().trim().toLowerCase();
        String tien1 = txt_Gia1.getText().trim();
        String tien2 = txt_Gia2.getText().trim();

        if (!txt_TenSp.getText().isEmpty() && !txt_Gia1.getText().isEmpty() && !txt_Gia2.getText().isEmpty()) {
            List<SanPham> spnew = new ArrayList<>();
            int n1 = Integer.parseInt(tien1)*1000;
            int n2 = Integer.parseInt(tien2)*1000;
            for (SanPham sp : daoSP.sanphamlist) {
                double gia = sp.getGia();
                String ten = sp.getTenSp().toLowerCase();
                if (gia >= n1 && gia <= n2 && ten.contains(name)) {
                    spnew.add(sp);
                }
            }
            Object[][] data = new Object[spnew.size()][];
            for (int i = 0; i < spnew.size(); i++) {
                SanPham sp = spnew.get(i);
                data[i] = new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getLoaisp(), sp.getSoluong(), sp.getGia(), sp.getMaSp()+".gif"};
            }

            Object[] columnNames = {"Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Số lượng", "Giá", "Hình ảnh"};
            JTable table = new JTable(data, columnNames);

            // Tạo cột hình ảnh
            TableColumn imageColumn = table.getColumnModel().getColumn(5); // Thay columnIndex bằng số chỉ mục cột hình ảnh
            imageColumn.setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    if (value != null) {
                        String imagePath = value.toString(); // Lấy đường dẫn tới tệp ảnh từ dữ liệu sản phẩm
                        ImageIcon ii = new ImageIcon("pic/" + imagePath);
                        // Sử dụng JLabel để hiển thị hình ảnh
                        JLabel label = new JLabel();
                        label.setIcon(ii);
                        label.setHorizontalAlignment(JLabel.CENTER); // Căn giữa ảnh trong ô

                        // Điều chỉnh kích thước ảnh
                        int desiredWidth = 150; // Điều chỉnh kích thước rộng của ảnh
                        int desiredHeight = 150; // Điều chỉnh kích thước cao của ảnh
                        ImageIcon scaledIcon = scaleImage(ii, desiredWidth, desiredHeight);
                        label.setIcon(scaledIcon);

                        return label;
                    }

                    return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                }

                // Phương thức để điều chỉnh kích thước ảnh
                private ImageIcon scaleImage(ImageIcon icon, int width, int height) {
                    Image image = icon.getImage();
                    Image scaledImage = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
                    return new ImageIcon(scaledImage);
                }
            });

            int rowHeight = 100; // Kích thước hàng mong muốn
            table.setRowHeight(rowHeight);

            // Tạo cửa sổ
            JFrame application = new JFrame("Các sản phẩm tìm được");
            JScrollPane scrollPane = new JScrollPane(table);

            // Thêm thanh cuộn vào cửa sổ
            application.add(scrollPane);

            // Hiển thị cửa sổ
            application.dispose();
            application.setSize(1000, 500);
            application.setVisible(true);
        }
        if (txt_TenSp.getText().isEmpty() && !txt_Gia1.getText().isEmpty()) {
            List<SanPham> spnew = new ArrayList<>();
            int n1 = Integer.parseInt(tien1)*1000;
            int n2 = Integer.parseInt(tien2)*1000;
            for (SanPham sp : daoSP.sanphamlist) {
                double gia = sp.getGia();
                if (gia >= n1 && gia <= n2) {
                    spnew.add(sp);

                }
            }
            Object[][] data = new Object[spnew.size()][];
            for (int i = 0; i < spnew.size(); i++) {
                SanPham sp = spnew.get(i);
                data[i] = new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getLoaisp(), sp.getSoluong(), sp.getGia(), sp.getMaSp()+".gif"};
            }

            Object[] columnNames = {"Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Số lượng", "Giá", "Hình ảnh"};
            JTable table = new JTable(data, columnNames);

            // Tạo cột hình ảnh
            TableColumn imageColumn = table.getColumnModel().getColumn(5); // Thay columnIndex bằng số chỉ mục cột hình ảnh
            imageColumn.setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    if (value != null) {
                        String imagePath = value.toString(); // Lấy đường dẫn tới tệp ảnh từ dữ liệu sản phẩm
                        ImageIcon ii = new ImageIcon("pic/" + imagePath);
                        // Sử dụng JLabel để hiển thị hình ảnh
                        JLabel label = new JLabel();
                        label.setIcon(ii);
                        label.setHorizontalAlignment(JLabel.CENTER); // Căn giữa ảnh trong ô

                        // Điều chỉnh kích thước ảnh
                        int desiredWidth = 150; // Điều chỉnh kích thước rộng của ảnh
                        int desiredHeight = 150; // Điều chỉnh kích thước cao của ảnh
                        ImageIcon scaledIcon = scaleImage(ii, desiredWidth, desiredHeight);
                        label.setIcon(scaledIcon);

                        return label;
                    }

                    return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                }

                // Phương thức để điều chỉnh kích thước ảnh
                private ImageIcon scaleImage(ImageIcon icon, int width, int height) {
                    Image image = icon.getImage();
                    Image scaledImage = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
                    return new ImageIcon(scaledImage);
                }
            });

            int rowHeight = 100; // Kích thước hàng mong muốn
            table.setRowHeight(rowHeight);

            // Tạo cửa sổ
            JFrame application = new JFrame("Các sản phẩm tìm được");
            JScrollPane scrollPane = new JScrollPane(table);

            // Thêm thanh cuộn vào cửa sổ
            application.add(scrollPane);

            // Hiển thị cửa sổ
            application.dispose();
            application.setSize(1000, 500);
            application.setVisible(true);
        }
        if (!txt_TenSp.getText().isEmpty() && txt_Gia1.getText().isEmpty()) {
            List<SanPham> spnew = new ArrayList<>();
            for (SanPham sp : daoSP.sanphamlist) {
                String ten = sp.getTenSp().toLowerCase();
                if (ten.contains(name)) {
                    spnew.add(sp);
                }
            }
            // Chuyển đổi ArrayList thành mảng hai chiều
            Object[][] data = new Object[spnew.size()][];
            for (int i = 0; i < spnew.size(); i++) {
                SanPham sp = spnew.get(i);
                data[i] = new Object[]{sp.getMaSp(), sp.getTenSp(), sp.getLoaisp(), sp.getSoluong(), sp.getGia(), sp.getMaSp()+".gif"};
            }

            Object[] columnNames = {"Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Số lượng", "Giá", "Hình ảnh"};
            JTable table = new JTable(data, columnNames);

            // Tạo cột hình ảnh
            TableColumn imageColumn = table.getColumnModel().getColumn(5); // Thay columnIndex bằng số chỉ mục cột hình ảnh
            imageColumn.setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    if (value != null) {
                        String imagePath = value.toString(); // Lấy đường dẫn tới tệp ảnh từ dữ liệu sản phẩm
                        ImageIcon ii = new ImageIcon("pic/" + imagePath);
                        // Sử dụng JLabel để hiển thị hình ảnh
                        JLabel label = new JLabel();
                        label.setIcon(ii);
                        label.setHorizontalAlignment(JLabel.CENTER); // Căn giữa ảnh trong ô

                        // Điều chỉnh kích thước ảnh
                        int desiredWidth = 150; // Điều chỉnh kích thước rộng của ảnh
                        int desiredHeight = 150; // Điều chỉnh kích thước cao của ảnh
                        ImageIcon scaledIcon = scaleImage(ii, desiredWidth, desiredHeight);
                        label.setIcon(scaledIcon);

                        return label;
                    }

                    return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                }

                // Phương thức để điều chỉnh kích thước ảnh
                private ImageIcon scaleImage(ImageIcon icon, int width, int height) {
                    Image image = icon.getImage();
                    Image scaledImage = image.getScaledInstance(width, height, Image.SCALE_SMOOTH);
                    return new ImageIcon(scaledImage);
                }
            });

            int rowHeight = 100; // Kích thước hàng mong muốn
            table.setRowHeight(rowHeight);

            // Tạo cửa sổ
            JFrame application = new JFrame("Các sản phẩm tìm được");
            JScrollPane scrollPane = new JScrollPane(table);

            // Thêm thanh cuộn vào cửa sổ
            application.add(scrollPane);
            
            //vị trí hiện thị cửa sổ
            application.setLocation(220, 170);

            // Hiển thị cửa sổ
            application.dispose();
            application.setSize(1000, 500);
            application.setVisible(true);
        }

    }//GEN-LAST:event_btn_TimKemActionPerformed

    public static boolean isBeforeNow(JTextField textField) throws ParseException {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Date date = dateFormat.parse(textField.getText().trim());
        Date now = new Date();

        if (date.before(now)) {
            return true;
        } else {
            return false;
        }
    }

    public static boolean isDateValid(JTextField textField) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        dateFormat.setLenient(false);
        try {
            Date date = dateFormat.parse(textField.getText().trim());
            return true;
        } catch (ParseException e) {
            return false;
        }
    }
    public static boolean isAfterNgaynhap(JTextField textField, Date ngaynhap){
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            Date date = dateFormat.parse(textField.getText().trim());
            
            if (date.after(ngaynhap) || date.compareTo(ngaynhap)==0) {
                return true;
            } else {
                return false;
            }
        } catch (ParseException ex) {
            Logger.getLogger(Ban_hang.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void btn_ThemHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThemHangActionPerformed

        if (txt_MaSp.getText().isEmpty() && txt_slBan.getText().isEmpty() && txt_Gia1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ thông tin", "Lỗi!", JOptionPane.ERROR_MESSAGE);
        } else if (Integer.parseInt(txt_slBan.getText().trim()) <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng bán phải lớn hơn 0", "Lỗi!", JOptionPane.ERROR_MESSAGE);
        } else {
            SanPham sp = daoSP.findByID(txt_MaSp.getText().trim());
            if (sp == null) {
                JOptionPane.showMessageDialog(this, "Không có sản phẩm!", "Lỗi!", JOptionPane.ERROR_MESSAGE);
            } else {
                SanPham sp2 = donhang.findByID(txt_MaSp.getText().trim());
                if (sp2 != null) {
                    for (SanPham Sp : donhang.sanphamlist) {
                        if (sp2.getMaSp() == Sp.getMaSp()) {
                            Sp.setSoluongban(sp2.getSoluongban() + Integer.parseInt(txt_slBan.getText().trim()));
                        }
                    }
                    int soluongconlai = sp.getSoluong() - sp.getSoluongban();
                    if (sp.getSoluong() >= sp.getSoluongban()) {
                        long tong = 0;
                        for (SanPham Sp1 : donhang.sanphamlist) {
                            tong +=(long) Sp1.getSoluongban()*Sp1.getGiaban();
                        }
                        DecimalFormat decimalFormat = new DecimalFormat("#,###");
                        String format2 = decimalFormat.format(tong);
                        TongGia.setText(format2);
                        resetForm();
                        filldataDonhang();
                        JOptionPane.showMessageDialog(this, "Đã thêm sản phẩm vào đơn hàng thành công");
                    }else if (soluongconlai < 0) {
                        JOptionPane.showMessageDialog(this, "Không đủ hàng!!!", "", JOptionPane.ERROR_MESSAGE);
                    }
                    
                } else {
                    sp.setSoluongban(Integer.parseInt(txt_slBan.getText().trim()));
                
                        int soluongconlai = sp.getSoluong() - sp.getSoluongban();
                        Date now = new Date();
                        DateFormat dateFormat = new SimpleDateFormat("E MMM dd HH:mm:ss zzz yyyy");
                        String dateString = dateFormat.format(now);
                        sp.setNgayban(dateString);
                        sp.setGiaban(Integer.parseInt(txt_giaban.getText().trim())*1000);

                        if (sp.getSoluong() >= sp.getSoluongban()) {
                            DecimalFormat decimalFormat = new DecimalFormat("#,###");
                            String format = decimalFormat.format(sp.getGiaban());
                            String format1 = decimalFormat.format(sp.getSoluongban());
                            Object[] rowData = new Object[6];
                            rowData[0] = sp.getMaSp();
                            rowData[1] = sp.getTenSp();
                            rowData[2] = sp.getNgayban();
                            rowData[3] = sp.getLoaisp();
                            rowData[4] = format1;
                            rowData[5] = format;

                            DonhangModel.addRow(rowData);
                            donhang.add(sp);
                            long tong = 0;
                            for (SanPham sp1 : donhang.sanphamlist) {
                                tong +=(long) sp1.getSoluongban()*sp1.getGiaban();
                            }
                            String format2 = decimalFormat.format(tong);
                            TongGia.setText(format2);
                            resetForm();
                            filldataDonhang();

                            JOptionPane.showMessageDialog(this, "Đã thêm sản phẩm vào đơn hàng thành công");
                        } else if (soluongconlai < 0) {
                            JOptionPane.showMessageDialog(this, "Không đủ hàng!!!", "", JOptionPane.ERROR_MESSAGE);
                        }
                }    
            } 
        }
    }//GEN-LAST:event_btn_ThemHangActionPerformed

    private void btn_quanlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quanlyActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_btn_quanlyActionPerformed

    private void btn_ThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThoatActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_btn_ThoatActionPerformed

    private void btn_LammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LammoiActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_btn_LammoiActionPerformed

    private void txt_TenSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TenSpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TenSpActionPerformed

    private void lbl_donhang1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_donhang1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_donhang1MouseClicked

    private void lbl_donhang2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_donhang2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_donhang2MouseClicked

    private void Huy_donActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Huy_donActionPerformed
        // TODO add your handling code here:
        Iterator<SanPham> iterator = donhang.sanphamlist.iterator();
        while (iterator.hasNext()) {
            SanPham sanPham = iterator.next();
                iterator.remove();
        }
        filldataDonhang();
        resetForm();
        TongGia.setText("");
        JOptionPane.showMessageDialog(this, "Đã hủy đơn hàng thành công");
    }//GEN-LAST:event_Huy_donActionPerformed

    public void filldataDonhang() {
        DonhangModel.setRowCount(0);
        for (SanPham sp : donhang.sanphamlist) {
            DecimalFormat decimalFormat = new DecimalFormat("#,###");
            String format = decimalFormat.format(sp.getGiaban());
            String format1 = decimalFormat.format(sp.getSoluongban());
            Object[] rowData = new Object[6];
            rowData[0] = sp.getMaSp();
            rowData[1] = sp.getTenSp();
            rowData[2] = sp.getNgayban();
            rowData[3] = sp.getLoaisp();
            rowData[4] = format1;
            rowData[5] = format;
            DonhangModel.addRow(rowData);
        }
    }
    
    private void Thanh_toanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Thanh_toanActionPerformed
        // TODO add your handling code here:
        for (SanPham sp : donhang.sanphamlist) {
            banhangList.add(sp);
            int soluongconlai = sp.getSoluong() - sp.getSoluongban();
            if (soluongconlai == 0) {
                String duongDanTep = "pic/"+sp.getMaSp()+".gif"; // Đường dẫn đến tệp ảnh cần xó
                File fileAnh = new File(duongDanTep);
                fileAnh.delete();
                daoSP.sanphamlist.remove(sp);
                fillData();
                ExportKhohang();
            } else if (soluongconlai > 0) {
                sp.setSoluong(soluongconlai);
                fillData();
                ExportKhohang();
            }
            ExportBanhang();
        }
        JOptionPane.showMessageDialog(this, "Thanh toán thành công");
        TongGia.setText("");
        
        Iterator<SanPham> iterator = donhang.sanphamlist.iterator();
        while (iterator.hasNext()) {
            SanPham sanPham = iterator.next();
                iterator.remove();
        }
        filldataDonhang();
        resetForm();
    }//GEN-LAST:event_Thanh_toanActionPerformed

    private void XoaSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaSpActionPerformed
        // TODO add your handling code here:
        Iterator<SanPham> iterator = donhang.sanphamlist.iterator();
        while (iterator.hasNext()) {
            SanPham sanPham = iterator.next();
            if (sanPham.getNgayban() == ngay) {
                iterator.remove();
                resetForm();
                filldataDonhang();
                long tong = 0;
                for (SanPham sp1 : donhang.sanphamlist) {
                    tong +=(long) sp1.getSoluongban()*sp1.getGiaban();
                }
                DecimalFormat decimalFormat = new DecimalFormat("#,###");
                String format2 = decimalFormat.format(tong);
                TongGia.setText(format2);
                JOptionPane.showMessageDialog(rootPane, "Xóa thành công");
                break;
            }
        }
    }//GEN-LAST:event_XoaSpActionPerformed

    private void txt_Gia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_Gia2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Gia2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Huy_don;
    private javax.swing.JToggleButton Thanh_toan;
    private javax.swing.JTextField TongGia;
    private javax.swing.JButton XoaSp;
    private javax.swing.JLabel a;
    private javax.swing.JButton btn_Lammoi;
    private javax.swing.JButton btn_Quaylai;
    private javax.swing.JButton btn_ThemHang;
    private javax.swing.JButton btn_Thoat;
    private javax.swing.JButton btn_TimKem;
    private javax.swing.JButton btn_quanly;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_donhang1;
    private javax.swing.JLabel lbl_donhang2;
    private javax.swing.JTable tbl_donhang;
    private javax.swing.JTable tbl_khohang;
    private javax.swing.JTextField txt_Gia1;
    private javax.swing.JTextField txt_Gia2;
    private javax.swing.JTextField txt_MaSp;
    private javax.swing.JTextField txt_TenSp;
    private javax.swing.JTextField txt_giaban;
    private javax.swing.JTextField txt_slBan;
    private javax.swing.JLabel vnd;
    // End of variables declaration//GEN-END:variables
}
